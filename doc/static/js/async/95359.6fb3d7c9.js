"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["95359"],{53100:function(e,n,s){s.r(n);var i=s(85893),r=s(50065),t=s(95895);function l(e){let n=Object.assign({h1:"h1",a:"a",p:"p",h2:"h2",ul:"ul",li:"li",pre:"pre",code:"code",span:"span",div:"div",h3:"h3",strong:"strong",ol:"ol",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,r.ah)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"model-quantized-compilation",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#model-quantized-compilation",children:"#"}),"Model Quantized Compilation"]}),"\n",(0,i.jsx)(t.Z,{}),"\n",(0,i.jsx)(n.p,{children:"During the model quantized compilation, the tool will generate the intermediate stage onnx model as well as the runtime model for simulating the on-board situations according to the configuration file."}),"\n",(0,i.jsxs)(n.h2,{id:"usage",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#usage",children:"#"}),"Usage"]}),"\n",(0,i.jsx)(n.p,{children:"The hb_compile provides two modes when doing the model quantized compilation, fast performance evaluation mode (with fast-perf turned on) and traditional model conversion compilation mode (without fast-perf turned on)."}),"\n",(0,i.jsx)(n.p,{children:"The fast performance evaluation mode, when turned on, will generate the hbm model that can have the highest performance when running on the board side during the conversion process, and the tool internally performs the following operations:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Run BPU executable operators on the BPU whenever possible."}),"\n",(0,i.jsx)(n.li,{children:"Remove CPU operators that are removable at the beginning and end of the model, including: Quantize/Dequantize, Transpose, Cast, Reshape, etc."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"If you want to use the fast performance evaluation mode (i.e., turn on fast-perf), the reference command is as follows:"}),"\n",(0,i.jsx)(n.pre,{className:"code",children:(0,i.jsx)(n.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,i.jsxs)(n.code,{className:"language-bash",meta:"",children:[(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"hb_compile"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"--fast-perf"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"--model"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" ${caffe_model"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"onnx_model} \\"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"           "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"--proto"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" ${caffe_proto} \\"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"           "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"--march"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" ${march} \\ "})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"           "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"--input-shape"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" ${input_node_name} ${input_shape} "})]}),"\n"]})})}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive warning",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"Attention"}),(0,i.jsx)(n.div,{className:"rspress-directive-content",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Please note that if you need to enable fast performance evaluation mode, do not configure the ",(0,i.jsx)(n.code,{children:"-config"})," parameter as the tool uses the built-in high-performance configuration in this mode."]}),"\n",(0,i.jsxs)(n.li,{children:["When using hb_compile for model quantized compilation, the ",(0,i.jsx)(n.code,{children:"--input-shape"})," parameter configuration only works in fast performance evaluation mode (i.e. fast-perf is turned on)."]}),"\n"]})})]}),"\n",(0,i.jsx)(n.p,{children:"If you want to use the traditional model conversion compilation mode (without fast-perf enabled), the reference command is as follows:"}),"\n",(0,i.jsx)(n.pre,{className:"code",children:(0,i.jsx)(n.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,i.jsxs)(n.code,{className:"language-bash",meta:"",children:[(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"hb_compile"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"--config"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" ${config_file} "})]}),"\n"]})})}),"\n",(0,i.jsxs)(n.h2,{id:"parameters-introduction",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#parameters-introduction",children:"#"}),"Parameters Introduction"]}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsxs)("colgroup",{children:[(0,i.jsx)("col",{style:{width:"20%"}}),(0,i.jsx)("col",{style:{width:"80%"}})]}),(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"PARAMETER"})}),(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"DESCRIPTION"})})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"-h, --help"})}),(0,i.jsx)("td",{children:"Show help information and exit."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"-c, --config"})}),(0,i.jsx)("td",{children:"Configuration file for the model compilation, in YAML format."})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"--fast-perf"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:["Turn on fast-perf, which will generate the hbm model that can have the highest performance when running on the board side during the conversion process,\nso that you can easily use it for the model performance evaluation later.",(0,i.jsx)("br",{}),"\nIf you turned on fast-perf, you also need to configure the following:",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("code",{children:"-m, --model"}),", Floating-point model file of Caffe/ONNX.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("code",{children:"--proto"}),", Specify the Prototxt file of the Caffe model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("code",{children:"--march"}),", BPU's micro architectures, for J6E processor, you should specify it to",(0,i.jsx)("code",{children:"nash-e"}),", for J6M processor, you should specify it to ",(0,i.jsx)("code",{children:"nash-m"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("code",{children:"-i, --input-shape"}),", Optional parameter that specifies the shape of the input node of the model.\nWhen using hb_compile for model quantized compilation, this configuration only takes effect when fast-perf is turned on currently.\nIt is used in the following way:",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)("ul",{className:"list-disc pl-5 my-4 leading-7",children:[(0,i.jsxs)("li",{children:["Specify the shape information of a single input node, example of how to use: ",(0,i.jsx)("code",{children:"--input-shape input_1 1x3x224x224"}),"."]}),"\n",(0,i.jsxs)("li",{children:["Specify the shapes of multiple input nodes, example of how to use: ",(0,i.jsx)("code",{children:"--input-shape input_1 1x3x224x224 --input-shape input_2 1x3x224x224"}),"."]})]}),"\n",(0,i.jsx)("span",{style:{color:"red"},children:"Attention"}),": ",(0,i.jsx)("br",{}),"\nFor the non-dynamic input model, ",(0,i.jsx)("code",{children:"--input-shape"})," can be left unconfigured and the tool will automatically read the size information from the model file.",(0,i.jsx)("br",{}),"\nFor the dynamic input model: ",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)("ul",{className:"list-disc pl-5 my-4 leading-7",children:[(0,i.jsxs)("li",{children:["If the model has single input and the ",(0,i.jsx)("code",{children:"--input-shape"})," is not specified,\nthe tool will set the first dimension of the model which the first dimension of the input node is [-1, 0, ?] to 1 by default."]}),"\n",(0,i.jsx)("li",{children:"If the model has multiple inputs, you must configure this parameter to specify the shape for each input."})]})]})})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:["The log file generated by the compilation will be stored in the directory where the command is executed under the default name ",(0,i.jsx)(n.code,{children:"hb_compile.log"}),"."]}),"\n",(0,i.jsxs)(n.h2,{id:"full_yaml",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#full_yaml",children:"#"}),"Configuration File Template"]}),"\n",(0,i.jsx)(n.p,{children:"A complete configuration file template is shown as below:"}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive info",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"Note"}),(0,i.jsx)(n.div,{className:"rspress-directive-content",children:(0,i.jsxs)(n.p,{children:["Below configuration file is only for display, in an actual configuration file of a model, the ",(0,i.jsx)(n.code,{children:"caffe_model"})," and ",(0,i.jsx)(n.code,{children:"onnx_model"})," parameters are not coexisting.\nThe model should be either a Caffe or an ONNX model. That is, ",(0,i.jsx)(n.code,{children:"caffe_model"})," + ",(0,i.jsx)(n.code,{children:"prototxt"})," or ",(0,i.jsx)(n.code,{children:"onnx_model"})," , you need to choose one of the two when configuring."]})})]}),"\n",(0,i.jsx)(n.pre,{className:"code",children:(0,i.jsx)(n.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,i.jsxs)(n.code,{className:"language-yaml",meta:"",children:[(0,i.jsx)(n.span,{className:"line line-number",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# model parameters  "})}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"model_parameters"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The descriptive file of the original Caffe floating-point model "})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"prototxt"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'***.prototxt'"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The original Caffe model file  "})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"caffe_model"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'****.caffemodel'"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The original ONNX model file"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"onnx_model"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'****.onnx'"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The target processor architecture of conversion"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"march"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'nash-e'"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The prefix of the converted model file which will run on the dev board  "})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"output_model_file_prefix"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'resnet50'"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The directory where the conversion results will be saved  "})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"working_dir"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'./model_output_dir'"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Specify the output node of the model"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"output_nodes"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"OP_name"'})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Batch delete nodes of a certain type"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"remove_node_type"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"Dequantize"'})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Delete the node with the specified name"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"remove_node_name"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"OP_name"'})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsx)(n.span,{className:"line line-number",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# input information parameters"})}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_parameters"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The input node name of the floating-point model"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_name"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"data"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The input data format of the original floating-point model (quantity/sequence consistent with the input_name)"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_type_train"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'bgr'"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The input data layout of the original floating-point model (quantity/sequence consistent with the input_name)"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_layout_train"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'NCHW'"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The input data size of the original floating-point model"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_shape"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'1x3x224x224'"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The data batch_size input to the neural network when the network is actually executed"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_batch"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"1"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The mean value of the image subtracted by the preprocessing method, if it is the channel mean, the values must be separated by a space"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"mean_value"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'103.94 116.78 123.68'"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The image scaling of the preprocessing method, if it is a channel scaling, the values must be separated by a space"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"scale_value"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'0.017'"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The input data format which the board-side deployable model needs to match"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# (quantity/sequence consistent with the input_name)"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_type_rt"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'yuv444'"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Special input data format"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_space_and_range"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'regular'"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsx)(n.span,{className:"line line-number",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Calibration parameters"})}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"calibration_parameters"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The directory where the calibration samples will be saved"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"cal_data_dir"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'./calibration_data'"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"	"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# The quantization configuration parameters used for model calibration"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"	"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"quant_config"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'./quant_config.json'"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsx)(n.span,{className:"line line-number",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# compilation parameters "})}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"compiler_parameters"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Select compilation strategy"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"compile_mode"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'latency'"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Number of cores to run the model"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"core_num"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"1"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Select the priority of model compilation"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"optimize_level"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'O2'"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Specify the input data source with the name data"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_source"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" {"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"data"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"pyramid"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Specify the maximum continuous execution time for each function call of the model"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"max_time_per_fc"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"1000"})]}),"\n",(0,i.jsx)(n.span,{className:"line line-number"}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"# Specify the number of processes when compiling the model"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"jobs"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"8"})]}),"\n"]})})}),"\n","\n",(0,i.jsx)(n.p,{children:"The configuration file mainly contains model parameters, input information parameters, calibration parameters, compilation parameters.\nAll parameter groups must exist in your configuration file.\nParameters can be divided into the optional and the mandatory, while the optional parameters can be left unconfigured."}),"\n",(0,i.jsx)(n.p,{children:"The following is the specific parameter information, the parameters will be more, we follow the above parameter group order to introduce.\nRequired/Optional indicates whether this parameter must be specified in the Yaml file."}),"\n",(0,i.jsxs)(n.h2,{id:"config_parameter",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#config_parameter",children:"#"}),"Specific Parameter Information"]}),"\n",(0,i.jsxs)(n.h3,{id:"model_parameter_group",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#model_parameter_group",children:"#"}),"Model Parameters"]}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsxs)("colgroup",{children:[(0,i.jsx)("col",{style:{width:"15%"}}),(0,i.jsx)("col",{style:{width:"74%"}}),(0,i.jsx)("col",{style:{width:"11%"}})]}),(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"PARAMETER"})}),(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"DESCRIPTION"})}),(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"Required/Optional"})})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"prototxt"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the prototxt filename of the floating-point Caffe model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": Model path.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This parameter must be specified when the model is a ",(0,i.jsx)("code",{children:"Caffe"})," model."]})}),(0,i.jsx)("td",{children:"Caffe module required"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"caffe_model"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the caffemodel filename of the floating-point Caffe model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": Model path.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This parameter must be specified when the model is a ",(0,i.jsx)("code",{children:"Caffe"})," model."]})}),(0,i.jsx)("td",{children:"Caffe module required"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"onnx_model"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the onnx filename of the floating-point ONNX model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": Model path.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This parameter must be specified when the model is a ",(0,i.jsx)("code",{children:"ONNX"})," model."]})}),(0,i.jsx)("td",{children:"ONNX module required"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"march"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the platform architecture to run the board-side deployable model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"'nash-e'"})," or ",(0,i.jsx)("code",{children:"'nash-m'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": The two optional configuration values correspond to J6E and J6M processors in that order.",(0,i.jsx)("br",{}),"\nDepending on the platform you are using, you can choose between the two options."]})}),(0,i.jsx)("td",{children:"required"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"output_model_file_prefix"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the prefix of the board-side deployable model filename.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),":",(0,i.jsx)("code",{children:"'model'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This parameter specifies the prefix of the converted heterogeneous model filename."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"working_dir"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the directory to save the conversion results.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),":",(0,i.jsx)("code",{children:"'model_output'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": The tool will create a new directory automatically if it doesn't exist."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"output_nodes"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies model output node(s).",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": Specific node name of the model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This parameter is used to support you to specify the node as the model output, the value should be the specific node name of the model.",(0,i.jsx)("br",{}),"\nWhen there are multiple values, please refer to ",(0,i.jsx)("a",{href:"#param_value",children:"param_value Configuration"}),"."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"remove_node_type"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter sets the type of the deleted node.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:'"Quantize"'}),", ",(0,i.jsx)("code",{children:'"Transpose"'}),", ",(0,i.jsx)("code",{children:'"Dequantize"'}),", ",(0,i.jsx)("code",{children:'"Cast"'}),", ",(0,i.jsx)("code",{children:'"Reshape"'}),", ",(0,i.jsx)("code",{children:'"Softmax"'}),".\nDifferent types should be split by",(0,i.jsx)("code",{children:";"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": No settings or set to null doesn't affect the model conversion process.",(0,i.jsx)("br",{}),"\nThis parameter is used to support you in setting the type information of the node to be deleted.",(0,i.jsx)("br",{}),"\nThe deleted node must be at the beginning or end of the model, connected to the input or output of the model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("span",{style:{color:"red"},children:"Attention"}),": After setting this parameter, we will match the deletable nodes of the model according to your configuration.\nIf the node type you configured to be deleted meets the deletion conditions, it will be deleted and this process will be repeated until the deletable nodes can not be matched with the configured node type."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"remove_node_name"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter sets the name of the deleted node.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": The name of the node in the model to be deleted. Different names should be split by",(0,i.jsx)("code",{children:";"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": No settings or set to null doesn't affect the model conversion process.",(0,i.jsx)("br",{}),"\nThis parameter is used to support you in setting the name of the node to be deleted.",(0,i.jsx)("br",{}),"\nThe deleted node must be at the beginning or the end of the model, connected to the input or output of the model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("span",{style:{color:"red"},children:"Attention"}),": After setting this parameter, we will match the deletable nodes of the model according to your configuration.\nIf the node name you configured to be deleted meets the deletion conditions, it will be deleted and this process will be repeated until the deletable nodes can not be matched with the configured node name."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"debug_mode"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": Set debugging parameters for accuracy analysis.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:'"dump_all_layers_output"'}),",",(0,i.jsx)("code",{children:'"dump_calibration_data"'}),(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),":\n",(0,i.jsx)("ul",{className:"list-disc pl-5 my-4 leading-7",children:(0,i.jsxs)("li",{children:[(0,i.jsx)("code",{children:'"dump_all_layers_output"'})," specifies whether the board-side deployable model retains the ability to output intermediate layer values.\nNote that dumping the intermediate layer results is a debugging method, please do not enable it unless it is necessary. "]})}),"\n",(0,i.jsx)("ul",{className:"list-disc pl-5 my-4 leading-7",children:(0,i.jsxs)("li",{children:[(0,i.jsx)("code",{children:'"dump_calibration_data"'})," serves to save the calibration data for the accuracy debug analysis and the data format is .npy.\nThis data can be fed directly into the model for inference via np.load().\nIf you don't set this parameter, you can also save the data yourself and use the accuracy debug tool for accuracy analysis. "]})}),"\n",(0,i.jsx)("span",{style:{color:"red"},children:"Attention"}),": It is not supported to configure input_source to be resizer after setting dump_all_layers_output."]})}),(0,i.jsx)("td",{children:"optional"})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"input-information-parameters",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#input-information-parameters",children:"#"}),"Input Information Parameters"]}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsxs)("colgroup",{children:[(0,i.jsx)("col",{style:{width:"15%"}}),(0,i.jsx)("col",{style:{width:"74%"}}),(0,i.jsx)("col",{style:{width:"11%"}})]}),(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"PARAMETER"})}),(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"DESCRIPTION"})}),(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"Required/Optional"})})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"input_name"})}),(0,i.jsxs)("td",{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the input node names of the original floating-point model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": Single input: ",(0,i.jsx)("code",{children:'""'})," or the input node name, Multiple inputs: ",(0,i.jsx)("code",{children:'"input_name1; input_name2; input_name3..."'}),(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": No configuration is required if there is only one input node.",(0,i.jsx)("br",{}),"\nIf there are more than one nodes, it must be configured so as to guarantee the accuracy of subsequent types and input sequence of the calibration data.",(0,i.jsx)("br",{}),"\nFor configuration methods of multiple values, please refer to ",(0,i.jsx)("a",{href:"#param_value",children:" param_value Configuration "}),"."]}),(0,i.jsxs)("td",{children:["Dynamic input: required ",(0,i.jsx)("br",{}),"\nNon-Dynamic input: ",(0,i.jsx)("br",{}),"\nOptional for single input ",(0,i.jsx)("br",{}),"\nRequired for multiple inputs "]})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"input_type_train"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the input data type of the original floating-point model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"'rgb'"}),", ",(0,i.jsx)("code",{children:"'bgr'"}),",",(0,i.jsx)("code",{children:"'yuv444'"}),", ",(0,i.jsx)("code",{children:"'yuv444_128'"}),", ",(0,i.jsx)("code",{children:"'gray'"})," and ",(0,i.jsx)("code",{children:"'featuremap'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": ",(0,i.jsx)("code",{children:"'featuremap'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": Each input node needs to be configured with a defined input data type.\nIf there are multiple input nodes, the order of the nodes must be strictly consistent with the order in the ",(0,i.jsx)("code",{children:"input_name"}),".",(0,i.jsx)("br",{}),"\nFor configuration methods of multiple values, please refer to ",(0,i.jsx)("a",{href:"#param_value",children:" param_value Configuration"}),(0,i.jsx)("br",{}),"\nFor the selection of data types, please refer to: ",(0,i.jsx)("a",{href:"../../ptq_usage/quantize_compile.html#conversion_interpretation",children:"Model Conversion Interpretation"}),"section."]})}),(0,i.jsx)("td",{children:"required "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"input_type_rt"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the input data format that the board-side deployable model obtained after conversion must match.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"'rgb'"}),", ",(0,i.jsx)("code",{children:"'bgr'"}),",",(0,i.jsx)("code",{children:"'yuv444_128'"}),(0,i.jsx)("code",{children:"'nv12'"}),",",(0,i.jsx)("code",{children:"'gray'"})," and ",(0,i.jsx)("code",{children:"'featuremap'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": ",(0,i.jsx)("code",{children:"'featuremap'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": Here is an indication of the data format you need to use.",(0,i.jsx)("br",{}),"\nIt doesn't have to be the same as the data format of the original model,\n",(0,i.jsx)("b",{children:"but note that this is the format that will actually feed into your model when running on the computing platform"}),".",(0,i.jsx)("br",{}),"\nEach input node needs to be configured with a defined input data layout.\nIf there are multiple input nodes, the sequence of the configured nodes must be strictly consistent with the ",(0,i.jsx)("code",{children:"input_name"})," sequence.",(0,i.jsx)("br",{}),"\nFor configuration methods of multiple values, please refer to ",(0,i.jsx)("a",{href:"#param_value",children:" param_value Configuration"}),".",(0,i.jsx)("br",{}),"\nFor the selection of data types, please refer to ",(0,i.jsx)("a",{href:"../../ptq_usage/quantize_compile.html#conversion_interpretation",children:"Model Conversion Interpretation"}),"section.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("span",{style:{color:"red"},children:"Attention"}),": When ",(0,i.jsx)("code",{children:"input_type_rt"})," is configured as a featuremap non-four-dimensional input, do not specify the ",(0,i.jsx)(n.code,{children:"mean_value"}),", ",(0,i.jsx)(n.code,{children:"scale_value"})," and ",(0,i.jsx)(n.code,{children:"std_value"}),"."]})}),(0,i.jsx)("td",{children:"required "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"input_layout_train"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the input data layout of the original floating-point model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"'NHWC'"}),", ",(0,i.jsx)("code",{children:"'NCHW'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": Each input node needs to be configured with a defined input data layout that shall be the same as the layout of the original floating-point model.",(0,i.jsx)("br",{}),"\nIf there are multiple input nodes, the order of the nodes must be strictly consistent with the ",(0,i.jsx)("code",{children:"input_name"})," sequence.",(0,i.jsx)("br",{}),"\nFor configuration methods of multiple values, please refer to ",(0,i.jsx)("a",{href:"#param_value",children:" param_value Configuration"}),".",(0,i.jsx)("br",{}),"\nFor more about data layout, please refer to ",(0,i.jsx)("a",{href:"../../ptq_usage/quantize_compile.html#conversion_interpretation",children:"Model Conversion Interpretation"}),"section."]})}),(0,i.jsx)("td",{children:"required "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"input_space_and_range"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies special data formats.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"'regular'"})," and ",(0,i.jsx)("code",{children:"'bt601_video'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": ",(0,i.jsx)("code",{children:"'regular'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": The purpose of this parameter is to deal with the YUV420 format dumped by different ISP and it will only become valid when the ",(0,i.jsx)("code",{children:"input_type_rt"})," is specified as ",(0,i.jsx)("code",{children:"nv12"}),",\nif the format is not ",(0,i.jsx)("code",{children:"nv12"}),", an error will be reported, and the process will exit.",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)("ul",{className:"list-disc pl-5 my-4 leading-7",children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("code",{children:"regular"})," is a common YUV420 format ranged between ",(0,i.jsx)("code",{children:"[0,255]"}),"."]}),"\n",(0,i.jsxs)("li",{children:[(0,i.jsx)("code",{children:"bt_601_video"})," is another YUV420 video format ranged between ",(0,i.jsx)("code",{children:"[16,235]"}),". For more information about bt601, please feel free to Google it."]})]}),"\n",(0,i.jsx)("span",{style:{color:"red"},children:"Attention"}),": You don't need to configure this parameter without explicit requirements."]})}),(0,i.jsx)("td",{children:"optional "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"input_shape"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the input data size of the original floating-point model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": Dimensions of shape should be separated by ",(0,i.jsx)("code",{children:"x"}),", e.g. ",(0,i.jsx)("code",{children:"'1x3x224x224'"}),".",(0,i.jsx)("br",{}),"\nYou don't need to configure this parameter when the original floating-point model is a non-dynamic input, the tool will read the size information from model files automatically.",(0,i.jsx)("br",{}),"\nIf you need to configure multiple input nodes, the sequence of configured nodes must be strictly consistent with the ",(0,i.jsx)("code",{children:"input_name"})," sequence.",(0,i.jsx)("br",{}),"\nFor configuration methods of multiple values, please refer to ",(0,i.jsx)("a",{href:"#param_value",children:" param_value Configuration"}),"."]})}),(0,i.jsxs)("td",{children:["Dynamic input: required ",(0,i.jsx)("br",{})," Non-Dynamic input: optional  "]})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"input_batch"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the input data batch size that the board-side deployable model obtained after conversion must match.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Int.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"1-4096"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": ",(0,i.jsx)("code",{children:"1"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This parameter specifies the input data batch size that the board-side deployable model obtained after conversion must match, but does not affect the input data batch size of the converted bc model.\nThis parameter only supports specifying a single value, which will act on all inputs of the model when the model has multiple inputs.",(0,i.jsx)("br",{}),"\nIf you don't configure this parameter, the default value is 1.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("span",{style:{color:"red"},children:"Attention"}),":\n",(0,i.jsxs)("ul",{className:"list-disc pl-5 my-4 leading-7",children:[(0,i.jsxs)("li",{children:["This parameter can only be used for the model which first dimension of the ",(0,i.jsx)("code",{children:"input_shape"}),"is 1.\nIf the model has multiple inputs, the first dimension of the ",(0,i.jsx)(n.code,{children:"input_shape"})," needs to be 1 for all inputs."]}),"\n",(0,i.jsx)("li",{children:"This parameter only effective when the original onnx model itself supports multi-batch inference.\nHowever, due to the complexity of the operators, if during the model conversion process,\nHowever, due to the complexity of the operators, if during the model conversion process,\nyou meet the conversion failure log which indicates that the model does not support the configuration of the input_batch parameter,\nplease try to directly export a multi-batch onnx model and correctly configure the size of the calibration data to re-convert it\n(at this time, you no longer need to configure this arameter). "})]})]})}),(0,i.jsx)("td",{children:"optional "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"separate_batch"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies whether to enable the separated batch mode.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Bool.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"True"}),", ",(0,i.jsx)("code",{children:"False"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": ",(0,i.jsx)("code",{children:"False"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": If you don't configure this parameter, the default value is False, that is, the separated batch mode is not enabled.",(0,i.jsx)("br",{}),"\nWhen the separated batch mode is not enabled, the input need to be allocated in a contiguous memory area.\nFor example, if the model input is 1x3x224x224 and input_batch is set to N, you will need to prepare an on-board model input of Nx3x224x224.",(0,i.jsx)("br",{}),"\nWhen the separate batch mode is enabled, the input nodes with this mode enabled will be separated, the number of which to be separated is the value you specified with input_batch.\nYou can prepare the input for each batch individually, which no longer requires the input to be allocated in a contiguous area of memory in this mode.\nFor example, if the model input is 1x3x224x224 and input_batch is set to N, then you need to prepare N 1x3x224x224 on-board model inputs."]})}),(0,i.jsx)("td",{children:"optional "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"separate_name"})}),(0,i.jsxs)("td",{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": The parameter specifies the split node names.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),': Single input: "" or the input node name, Multiple inputs: "separate_name1; separate_name2; separate_name3...".',(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This parameter is only valid if ",(0,i.jsx)(n.code,{children:"separate_batch"})," is ",(0,i.jsx)(n.code,{children:"False"}),", internally it will do the splitting according to the node name you specified.",(0,i.jsx)("br",{}),"\nEnsure that the node to be split is within the ",(0,i.jsx)(n.code,{children:"input_name"})," range, if there are more than one nodes to be split, for configuration methods of multiple values, please refer to ",(0,i.jsx)("a",{href:"#param_value",children:"param_value Configuration"}),"."]}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"mean_value"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the mean value to be subtracted by the pre-processing method.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Float.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": Each input node has 2 configuration methods:",(0,i.jsx)("br",{}),"\nIf only one value is specified, then all channels will subtract the same mean value.",(0,i.jsx)("br",{}),"\nOtherwise, you need to specify the mean values for each channel and the number of values (separated by space) must be consistent with the numbers of channel, which mean that each channel will subtract a different mean value.",(0,i.jsx)("br",{}),"\nIf there is a node that doesn't require ",(0,i.jsx)("code",{children:"mean"})," processing, it should be specified as ",(0,i.jsx)("code",{children:"'None'"}),".",(0,i.jsx)("br",{}),"\nYou can specify the parameters like this: ",(0,i.jsx)(n.code,{children:"mean_value: 'value'"}),", while multiple values can be separated by ",(0,i.jsx)(n.code,{children:"';'"}),": ",(0,i.jsx)(n.code,{children:"mean_value: 'value1;value_2 value3'"}),". ",(0,i.jsx)("br",{}),"\nIf ",(0,i.jsx)(n.code,{children:"'value'"})," has multiple values, while multiple values can be separated by space or ",(0,i.jsx)(n.code,{children:"','"}),": ",(0,i.jsx)(n.code,{children:"mean_value: 'value11 value12 value13;value21 value22 value23;...'"})," or ",(0,i.jsx)(n.code,{children:"mean_value: 'value11,value12,value13;value21,value22,value23;...'"}),"."]})}),(0,i.jsx)("td",{children:"optional "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"scale_value"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the scale factor of the pre-processing method.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Float.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": Each input node has 2 configuration methods:",(0,i.jsx)("br",{}),"\nIf only one value is specified, then all channels will be multiplied by this factor.",(0,i.jsx)("br",{}),"\nOtherwise, you need to specify the scale values for each channel and the number of values (separated by space) must be consistent with the numbers of channel, which mean that each channel will be multiplied by a different factor.",(0,i.jsx)("br",{}),"\nIf there is a node that doesn't require ",(0,i.jsx)("code",{children:"scale"})," processing, it should be specified as ",(0,i.jsx)("code",{children:"'None'"}),".",(0,i.jsx)("br",{}),"\nYou can specify the parameters like this: ",(0,i.jsx)(n.code,{children:"scale_value: 'value'"}),", while multiple values can be separated by ",(0,i.jsx)(n.code,{children:"';'"}),": ",(0,i.jsx)(n.code,{children:"scale_value: 'value1;value_2;value3'"}),". ",(0,i.jsx)("br",{}),"\nIf ",(0,i.jsx)(n.code,{children:"'value'"})," has multiple values, while multiple values can be separated by space or ",(0,i.jsx)(n.code,{children:"','"}),": ",(0,i.jsx)(n.code,{children:"scale_value: 'value11 value12 value13;value21 value22 value23;...'"})," or ",(0,i.jsx)(n.code,{children:"scale_value: 'value11,value12,value13;value21,value22,value23;...'"}),"."]})}),(0,i.jsx)("td",{children:"optional "})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"std_value"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the std factor of the pre-processing method.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Float.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": Each input node has 2 configuration methods:",(0,i.jsx)("br",{}),"\nIf only one value is specified, then all channels will be divided by this factor.",(0,i.jsx)("br",{}),"\nOtherwise, you need to specify the std values for each channel and the number of values (separated by space) must be consistent with the numbers of channel, which mean that each channel will be divided by a different factor.",(0,i.jsx)("br",{}),"\nIf there is a node that doesn't require ",(0,i.jsx)("code",{children:"std"})," processing, it should be specified as ",(0,i.jsx)("code",{children:"'None'"}),".",(0,i.jsx)("br",{}),"\nYou can specify the parameters like this: ",(0,i.jsx)(n.code,{children:"std_value: 'value'"}),", while multiple values can be separated by ",(0,i.jsx)(n.code,{children:"';'"}),": ",(0,i.jsx)(n.code,{children:"std_value: 'value1;value_2;value3'"}),". ",(0,i.jsx)("br",{}),"\nIf ",(0,i.jsx)(n.code,{children:"'value'"})," has multiple values, while multiple values can be separated by space or ",(0,i.jsx)(n.code,{children:"','"}),": ",(0,i.jsx)(n.code,{children:"std_value: 'value11 value12 value13;value21 value22 value23;...'"})," or ",(0,i.jsx)(n.code,{children:"std_value: 'value11,value12,value13;value21,value22,value23;...'"}),"."]})}),(0,i.jsx)("td",{children:"optional"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"input_type_rt/input_type_train additional description"})}),"\n",(0,i.jsx)(n.p,{children:"To boost the ASIC performance, 2 assumptions have been made in the design of ASIC micro architecture:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"All inputs are quantized int8 data."}),"\n",(0,i.jsx)(n.li,{children:"All camera captured data are NV12."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Therefore, if you use the RGB (NCHW) format in the model training and expect the model to process NV12 data efficiently, then you will need to configure as follow:"}),"\n",(0,i.jsx)(n.pre,{className:"code",children:(0,i.jsx)(n.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,i.jsxs)(n.code,{className:"language-yaml",meta:"",children:[(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_parameters"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_type_rt"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'nv12'"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_type_train"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'rgb'"})]}),"\n",(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"input_layout_train"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:"'NCHW'"})]}),"\n"]})})}),"\n","\n",(0,i.jsxs)(n.p,{children:["In addition to converting the input data to NV12, you can also use different RGB-orders in the training and runtime infer.\nThe tool will automatically add data conversion nodes according to the data formats specified by the ",(0,i.jsx)(n.code,{children:"input_type_rt"})," and ",(0,i.jsx)(n.code,{children:"input_type_train"}),".\nNot any type combination is needed, in order to avoid your misuse, we only open some fixed type combinations in the following table\n(Y for supported image types, while N for unsupported image types. The first row of the table is the data types supported in ",(0,i.jsx)(n.code,{children:"input_type_rt"})," and the first column is the data types supported in ",(0,i.jsx)(n.code,{children:"input_type_train"}),".):"]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"center",children:(0,i.jsx)(n.strong,{children:"input_type_train \\ input_type_rt"})}),(0,i.jsx)(n.th,{align:"center",children:(0,i.jsx)(n.strong,{children:"nv12"})}),(0,i.jsx)(n.th,{align:"center",children:(0,i.jsx)(n.strong,{children:"yuv444"})}),(0,i.jsx)(n.th,{align:"center",children:(0,i.jsx)(n.strong,{children:"rgb"})}),(0,i.jsx)(n.th,{align:"center",children:(0,i.jsx)(n.strong,{children:"bgr"})}),(0,i.jsx)(n.th,{align:"center",children:(0,i.jsx)(n.strong,{children:"gray"})}),(0,i.jsx)(n.th,{align:"center",children:(0,i.jsx)(n.strong,{children:"featuremap"})})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"center",children:"yuv444"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"center",children:"rgb"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"center",children:"bgr"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"center",children:"gray"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"Y"}),(0,i.jsx)(n.td,{align:"center",children:"N"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"center",children:"featuremap"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"N"}),(0,i.jsx)(n.td,{align:"center",children:"Y"})]})]})]}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive info",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"Note"}),(0,i.jsx)(n.div,{className:"rspress-directive-content",children:(0,i.jsxs)(n.p,{children:["To meet the requirements of Horizon ASICs on input data type (int8) and reduce the inference costs,\nwhen ",(0,i.jsx)(n.code,{children:"input_type_rt"})," is of the RGB(NHWC/NCHW)/BGR(NHWC/NCHW) type, the input data type of the models converted by using the conversion tool will all be ",(0,i.jsx)(n.code,{children:"int8"}),".\nThat is, for regular image formats, pixel values should be subtracted by 128, which has already been done by the API and you do not need to do it again."]})})]}),"\n",(0,i.jsxs)(n.p,{children:["In the final hbm model obtained from the conversion, the conversion from ",(0,i.jsx)(n.code,{children:"input_type_rt"})," to ",(0,i.jsx)(n.code,{children:"input_type_train"})," is an internal process.\nYou only need to focus on the data format of ",(0,i.jsx)(n.code,{children:"input_type_rt"}),".\n",(0,i.jsxs)(n.strong,{children:["It is of vital importance to understand the requirement of the ",(0,i.jsx)(n.code,{children:"input_type_rt"})," when preparing the inference data for embedded applications"]}),",\n",(0,i.jsxs)(n.strong,{children:["please refer to the following explanations to each format of the ",(0,i.jsx)(n.code,{children:"input_type_rt"})]}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"rgb, bgr, and gray are commonly used image format. Note that each value is represented using UINT8."}),"\n",(0,i.jsx)(n.li,{children:"yuv444 is a popular image format. Note that each value is represented using UINT8."}),"\n",(0,i.jsx)(n.li,{children:"NV12 is a popular YUV420 image format. note that each value is represented using UINT8."}),"\n",(0,i.jsxs)(n.li,{children:["One special case of NV12 is to specify the ",(0,i.jsx)(n.code,{children:"bt601_video"})," of the ",(0,i.jsx)(n.code,{children:"input_space_and_range"}),".\nCompared with typical NV12 format, its value range has changed from [0,255] to [16,235].\nEach value is still represented as UINT8. Note that ",(0,i.jsx)(n.code,{children:"bt601_video"})," is supported configuring via ",(0,i.jsx)(n.code,{children:"input_space_and_range"})," only when ",(0,i.jsx)(n.code,{children:"input_type_train"})," is ",(0,i.jsx)(n.code,{children:"bgr"})," or ",(0,i.jsx)(n.code,{children:"rgb"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Featuremap is suitable for cases where the above listed formats failed to meet your needs, and this type uses float32 for each value.\nFor example, this format is commonly used for model processing such as radar and speech."}),"\n"]}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"Tip"}),(0,i.jsxs)(n.div,{className:"rspress-directive-content",children:[(0,i.jsxs)(n.p,{children:["The above ",(0,i.jsx)(n.code,{children:"input_type_rt"})," and ",(0,i.jsx)(n.code,{children:"input_type_train"})," are integrated into the toolchain processing procedure.\nIf you are very sure that no format conversion is required, then set the two ",(0,i.jsx)(n.code,{children:"input_type"})," to be the same,\nso that the same ",(0,i.jsx)(n.code,{children:"input_type"})," will perform the processing in a straight-through way and will not affect the actual execution performance of the model."]}),(0,i.jsxs)(n.p,{children:["Similarly, data pre-processing also is also integrated into the process.\nIf you don't need to do any pre-processing, just do not specify ",(0,i.jsx)(n.code,{children:"mean_value"}),", ",(0,i.jsx)(n.code,{children:"scale_value"})," and ",(0,i.jsx)(n.code,{children:"std_value"}),", which will not affect the actual execution performance of the model."]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"calibration-parameters",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#calibration-parameters",children:"#"}),"Calibration Parameters"]}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsxs)("colgroup",{children:[(0,i.jsx)("col",{style:{width:"12%"}}),(0,i.jsx)("col",{style:{width:"77%"}}),(0,i.jsx)("col",{style:{width:"11%"}})]}),(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"PARAMETER"})}),(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"DESCRIPTION"})}),(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"Required/Optional"})})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"cal_data_dir"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the directory to save the calibration samples.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": The calibration data in the directory must comply with the requirements of input configurations, please refer to the\n",(0,i.jsx)("a",{href:"../../ptq_usage/prepare_calibration_data.html",children:"Prepare Calibration Data"})," section.",(0,i.jsx)("br",{}),"\nWhen there are multiple input nodes, the sequence of configured nodes must be strictly consistent with the ",(0,i.jsx)("code",{children:"input_name"})," sequence.",(0,i.jsx)("br",{}),"\nFor configuration methods of multiple values, please refer to ",(0,i.jsx)("a",{href:"#param_value",children:" param_value Configuration"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("span",{style:{color:"red"},children:"Attention"}),": When the ",(0,i.jsx)(n.code,{children:"cal_data_dir"})," parameter is not configured, the tool will perform pseudo calibration to facilitate quick verification.\nAt this time, the accuracy of the model is abnormal and is only for functional testing."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"quant_config"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": The J6 platform supports flexible configuration of various quantization parameters,\nyou can use these parameters to configure the computational accuracy of the operator in the model,\nalgorithms used in the calibration and search methods for calibration parameters.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String/Dict.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": Path of json file or configuration parameters with dict form.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This parameter supports the configuration of computational accuracy from multiple levels(",(0,i.jsx)("code",{children:"model_config"}),",\n",(0,i.jsx)("code",{children:"op_config"}),", ",(0,i.jsx)("code",{children:"node_config"}),"),\nand supports the configuration of multiple computational accuracy data types(",(0,i.jsx)("code",{children:"int8/int16/float16"}),"),\nsupports multiple calibration algorithms(",(0,i.jsx)("code",{children:"kl/max"}),"),\nand supports searching for calibration parameters from different granularities (",(0,i.jsx)("code",{children:"modelwise/layerwise"}),"),\nplease refer to the ",(0,i.jsx)("a",{href:"quant_config.html",children:"The quant_config Introduction"}),"."]})}),(0,i.jsx)("td",{children:"optional"})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"compile_parameter_group",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#compile_parameter_group",children:"#"}),"Compilation Parameters"]}),"\n",(0,i.jsxs)("table",{children:[(0,i.jsxs)("colgroup",{children:[(0,i.jsx)("col",{style:{width:"12%"}}),(0,i.jsx)("col",{style:{width:"77%"}}),(0,i.jsx)("col",{style:{width:"11%"}})]}),(0,i.jsx)("thead",{children:(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"PARAMETER"})}),(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"DESCRIPTION"})}),(0,i.jsx)("td",{children:(0,i.jsx)("b",{children:"Required/Optional"})})]})}),(0,i.jsxs)("tbody",{children:[(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"compile_mode"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies compilation strategies.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"'latency'"}),", ",(0,i.jsx)("code",{children:"'bandwidth'"})," and ",(0,i.jsx)("code",{children:"'balance'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": ",(0,i.jsx)("code",{children:"'latency'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": The ",(0,i.jsx)("code",{children:"latency"})," aims to optimize the latency time of inference.",(0,i.jsx)("br",{}),"\nThe ",(0,i.jsx)("code",{children:"bandwidth"})," aims to optimize the access bandwidth of DDR.",(0,i.jsx)("br",{}),"\nThe ",(0,i.jsx)("code",{children:"balance"})," aims to balance the optimization of ",(0,i.jsx)("code",{children:"latency"})," and ",(0,i.jsx)("code",{children:"bandwidth"}),", to set this option, you need to specify the balance_factor.",(0,i.jsx)("br",{}),"\nIt is recommended to use the ",(0,i.jsx)("code",{children:"latency"})," strategy as long as your models don't severely exceed the expected bandwidth."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"balance_factor"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the balance ratio when the compile_mode is specified as balance.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Int.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"0-100"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This parameter is only used when the compile_mode is specified as balance, otherwise the configuration will not take effect.\n",(0,i.jsxs)("ul",{className:"list-disc pl-5 my-4 leading-7",children:[(0,i.jsx)("li",{children:"Configuration of 0 means that the bandwidth is optimal, which corresponds to the compile strategy with bandwidth as the compile_mode."}),"\n",(0,i.jsx)("li",{children:"Configuration of 100 means that the performance is optimal, which corresponds to the compile strategy with latency as the compile_mode."})]})]})}),(0,i.jsx)("td",{children:"compile_mode specified as balance: required"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"core_num"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the number of cores to run model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Int.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"1"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": ",(0,i.jsx)("code",{children:"1"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": Used to configure the number of cores for the model to run on the Horizon platform."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"optimize_level"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the model optimization levels.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": String.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"'O0'"})," , ",(0,i.jsx)("code",{children:"'O1'"}),",",(0,i.jsx)("code",{children:"'O2'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": ",(0,i.jsx)("code",{children:"'O2'"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": Optimization level ranges between ",(0,i.jsx)("code",{children:"O0"})," - ",(0,i.jsx)("code",{children:"O2"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("code",{children:"O0"}),": No optimization, fastest compilation speed and lowest optimization level.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("code",{children:"O1"})," to ",(0,i.jsx)("code",{children:"O2"}),": As the optimization level increases, the compiled model is expected to execute faster, but the compilation time is also expected to be longer."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"input_source"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the input source of dev board hbm models.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Dict.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"ddr"})," , ",(0,i.jsx)("code",{children:"pyramid"})," and ",(0,i.jsx)("code",{children:"resizer"})," .",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": None, it will be automatically selected from an optional range based on the value of input_type_rt by default:\n",(0,i.jsxs)("ul",{className:"list-disc pl-5 my-4 leading-7",children:[(0,i.jsx)("li",{children:"When input_type_rt is specified as nv12 or gray, input_source is automatically selected as pyramid by default."}),"\n",(0,i.jsx)("li",{children:"When input_type_rt is specified as any other value, input_source is automatically selected as ddr by default."}),"\n",(0,i.jsx)("li",{children:"When this parameter is specified as resizer, input_type_rt only supports specifying as nv12 or gray."})]}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This is an option for adapting the engineering environment and you are recommended to configure it after all model validations are complete.",(0,i.jsx)("br",{}),"\nThe ",(0,i.jsx)("code",{children:"ddr"})," indicates that the data comes from memory.\n",(0,i.jsx)("code",{children:"pyramid"})," and ",(0,i.jsx)("code",{children:"resizer"})," indicates the fixed hardware from the processor.",(0,i.jsx)("br",{}),"\nThis parameter is a bit special, e.g., if the model input name is data and the data source is memory (ddr), then this parameter should be configured as ",(0,i.jsx)("code",{children:'{"data": "ddr"}'}),"."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"max_time_per_fc"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter specifies the maximum continuous execution time (by \u03BCs) of model's each function call.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Int.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"0 or 1000-4294967295"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": ",(0,i.jsx)("code",{children:"0"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": The inference of the compiled directive model in the BPU are denoted by 1 or multiple function-calls(the function-call is the atomic unit in BPU execution).\nThe value of 0 means no restriction.",(0,i.jsx)("br",{}),"This parameter is used for specifying the max execution time of each function-call.\nThe model only has a chance to be preempted when the execution of a single function-call is finished.",(0,i.jsx)("br",{}),"\nPlease refer to the ",(0,i.jsx)("a",{href:"../../../ucp/runtime/runtime_dev.html#preemption",children:"Model Preemption Control"})," section.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("span",{style:{color:"red"},children:"Attention"}),": ",(0,i.jsxs)("ul",{className:"list-disc pl-5 my-4 leading-7",children:["\n",(0,i.jsx)("li",{children:"Note that this parameter is only used to implement the model preemption function and can be ignored otherwise."}),"\n",(0,i.jsx)("li",{children:"The model preemption funtion is only supported on the board, not in the simulator."})]})]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"jobs"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter sets the number of processes when compiling the hbm model.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Int.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": Within the maximum number of cores supported by the machine.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": 16.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": When you compile the hbm model, it is used to set the number of processes.",(0,i.jsx)("br",{}),"\nIt can improve the compilation speed to some extent."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"advice"})}),(0,i.jsx)("td",{children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter is used to indicate the predicted increase in elapsed time in microseconds after the model is compiled.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Int.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": Natural number.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": 0.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": During the model compilation process, the toolchain will perform a time consumption analysis internally.\nIn the actual process, the time consumption will be increased when doing operations such as data alignment of operators.\nAfter setting this parameter, when the deviation between the actual computation time and the theoretical computation time of a certain OP is larger than the value you specify, the relevant log will be printed,\nincluding information about the change in time, the shape and padding ratio before and after data alignment, etc."]})}),(0,i.jsx)("td",{children:"optional"})]}),(0,i.jsxs)("tr",{children:[(0,i.jsx)("td",{children:(0,i.jsx)("code",{children:"extra_params"})}),(0,i.jsxs)("td",{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"PURPOSE"}),": This parameter provides additional flexible configuration of some model compilation related parameters.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"PARAMETER TYPE"}),": Dict.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"RANGE"}),": ",(0,i.jsx)("code",{children:"input_no_padding"})," , ",(0,i.jsx)("code",{children:"output_no_padding"}),".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DEFAULT VALUE"}),": ","{}",".",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("b",{children:"DESCRIPTIONS"}),": This parameter is supported for configuring the following features (supported for configuring together):"]}),(0,i.jsxs)("ul",{className:"list-disc pl-5 my-4 leading-7",children:[(0,i.jsx)("li",{children:"input_no_padding: if not specified, the default is False. If specified as True, all non-image inputs of the model will be performed with removing padding, the configuration method is as follows:"}),(0,i.jsx)(n.pre,{className:"code",children:(0,i.jsx)(n.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,i.jsxs)(n.code,{className:"language-bash",meta:"",children:[(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"extra_params:"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"{"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"input_no_padding"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"True}"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n"]})})}),(0,i.jsx)("li",{children:"output_no_padding: if not specified, the default is False. If specified as True, all outputs of the model will performed with removing padding, the configuration method is as follows:"}),(0,i.jsx)(n.pre,{className:"code",children:(0,i.jsx)(n.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,i.jsxs)(n.code,{className:"language-bash",meta:"",children:[(0,i.jsxs)(n.span,{className:"line line-number",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"extra_params:"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"{"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"output_no_padding"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string)"},children:"True}"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n"]})})})]})]}),(0,i.jsx)("td",{children:"optional"})]})]})]}),"\n","\n",(0,i.jsxs)(n.h2,{id:"param_value",children:[(0,i.jsx)(n.a,{className:"header-anchor","aria-hidden":"true",href:"#param_value",children:"#"}),"param_value Configuration"]}),"\n",(0,i.jsxs)(n.p,{children:["You can specify the parameters like this: ",(0,i.jsx)(n.code,{children:"param_name: 'param_value'"}),", while multiple values can be separated by ",(0,i.jsx)(n.code,{children:"';'"}),": ",(0,i.jsx)(n.code,{children:"param_name: 'param_value1;param_value2;param_value3'"}),"."]}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive tip",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"Tip"}),(0,i.jsx)(n.div,{className:"rspress-directive-content",children:(0,i.jsxs)(n.p,{children:["To avoid parameter sequence problems, You are strongly suggested to specify the parameters(such as ",(0,i.jsx)(n.code,{children:"input_shape"})," etc.) explicitly when there are multi-input models."]})})]}),"\n",(0,i.jsxs)(n.div,{className:"rspress-directive warning",children:[(0,i.jsx)(n.div,{className:"rspress-directive-title",children:"Attention"}),(0,i.jsx)(n.div,{className:"rspress-directive-content",children:(0,i.jsxs)(n.p,{children:["Please note that, if set ",(0,i.jsx)(n.code,{children:"input_type_rt"})," to ",(0,i.jsx)(n.code,{children:"nv12"})," , an odd number cannot appear in the input size of model."]})})]})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,r.ah)(),e.components);return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(l,e)})):l(e)}n.default=o,o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["3.0.22%2Fen%2Fguide%2Fptq%2Fptq_tool%2Fhb_compile%2Fconvert.mdx"]={toc:[{id:"usage",text:"Usage",depth:2},{id:"parameters-introduction",text:"Parameters Introduction",depth:2},{id:"full_yaml",text:"Configuration File Template",depth:2},{id:"config_parameter",text:"Specific Parameter Information",depth:2},{id:"model_parameter_group",text:"Model Parameters",depth:3},{id:"input-information-parameters",text:"Input Information Parameters",depth:3},{id:"calibration-parameters",text:"Calibration Parameters",depth:3},{id:"compile_parameter_group",text:"Compilation Parameters",depth:3},{id:"param_value",text:"param_value Configuration",depth:2}],title:"Model Quantized Compilation",frontmatter:{}}},95895:function(e,n,s){s(39710);var i=s(85893),r=s(67294),t=s(45687);s(20388);let l={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"\u5C0F\u4E8E 1 \u5206\u949F"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function o(e,n,s){let i=Object.keys(l).includes(n)?n:s;return l[i](e)}n.Z=e=>{let{defaultLocale:n="en-US"}=e,s=(0,t.Vi)().page.readingTimeData,l=(0,t.Jr)(),a=(0,t.e7)(),[c,d]=(0,r.useState)(o(s,l,n));return(0,r.useEffect)(()=>{d(o(s,l,n))},[l,s]),(0,i.jsx)("span",{"data-dark":String(a),className:"rp-reading-time",children:c})}}}]);