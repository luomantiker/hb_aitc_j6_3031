"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["47088"],{45279:function(e,s,n){n.r(s);var r=n(85893),o=n(50065),i=n(95895);function t(e){let s=Object.assign({h1:"h1",a:"a",p:"p",code:"code",h2:"h2",pre:"pre",span:"span"},(0,o.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h1,{id:"start-up-method",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#start-up-method",children:"#"}),"Start-up Method"]}),"\n",(0,r.jsx)(i.Z,{}),"\n",(0,r.jsxs)(s.p,{children:[(0,r.jsx)(s.code,{children:"tools+configs"})," is the most basic training method of HAT at the moment. But in many cases, we need to deal with multi-card or distributed environments. These environments need to rely on some third-party libraries in order to be able to organize the basic training approach in multiple environments in an efficient way."]}),"\n",(0,r.jsxs)(s.p,{children:["In a multi-card or distributed environment, the common boot methods are ",(0,r.jsx)(s.code,{children:"torchrun"})," and so on. Here we briefly talk about the differences between these boot methods using commands."]}),"\n",(0,r.jsx)(s.p,{children:"Here is an example of float training with resnet18, and all the current HAT supported startup methods are listed for reference."}),"\n",(0,r.jsxs)(s.h2,{id:"the-simplest-mode",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#the-simplest-mode",children:"#"}),"The Simplest Mode"]}),"\n",(0,r.jsx)(s.p,{children:"This mode supports a range of single-machine single-card and single-machine multi-card two modes and does not support multi-machine multi-card, whose configuration only involves the modification of the index of device_ids in the configs."}),"\n",(0,r.jsxs)(s.p,{children:["Note that the mode of single-machine multi-card is actually implemented with the help of ",(0,r.jsx)(s.code,{children:"torch.multiprocess"}),", which effectively manages all the processes inside the single machine, which is why it does not support multiple machines."]}),"\n",(0,r.jsx)(s.pre,{className:"code",children:(0,r.jsx)(s.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,r.jsxs)(s.code,{className:"language-python",meta:"",children:[(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"# Single-machine Single-card"})}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"python3 tools"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"train"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --config configs"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"classification"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"resnet18"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --stage "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"float"})]}),"\n",(0,r.jsx)(s.span,{className:"line line-number"}),"\n",(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"# Single-machine Multi-card (by setting device_ids in config)"})}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"python3 tools"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"train"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --config configs"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"classification"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"resnet18"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --stage "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"float"})]}),"\n"]})})}),"\n",(0,r.jsxs)(s.h2,{id:"torchrun",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#torchrun",children:"#"}),"Torchrun"]}),"\n",(0,r.jsxs)(s.p,{children:["Note that torchrun requires a version of torch greater than or equal to ",(0,r.jsx)(s.code,{children:"1.10.0"}),", as those lower than that use torch.distributed.launch, which is not supported by HAT, and is not recommended to use."]}),"\n",(0,r.jsx)(s.p,{children:"Torchrun is the start-up tool provided by the torch framework to allow you to easily and quickly handle various environment variables inside the distributed environment."}),"\n",(0,r.jsxs)(s.p,{children:["For details on Torchrun, see ",(0,r.jsx)(s.a,{href:"https://pytorch.org/docs/1.10/elastic/run.html?highlight=torchrun",target:"_blank",rel:"noopener noreferrer",children:"Pytorch Community Documents"}),"."]}),"\n",(0,r.jsx)(s.pre,{className:"code",children:(0,r.jsx)(s.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,r.jsxs)(s.code,{className:"language-python",meta:"",children:[(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"# Single-machine Single-card (not recommended for Torchrun)"})}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"torchrun --nproc_per_node"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"1"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" tools"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"train"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --config configs"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"classification"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"resnet18"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --stage "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"float"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" --launcher torch"})]}),"\n",(0,r.jsx)(s.span,{className:"line line-number"}),"\n",(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"# Single-machine Multi-card (nproc_per_node and config in device_ids card number to keep consistent)"})}),"\n",(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"# If you need to specify card training you need to add CUDA_VISIBLE_DEVICES separately"})}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"CUDA_VISIBLE_DEVICES"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"\u201C"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"0"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"1"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"2"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"3"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"\u201D torchrun --nproc_per_node"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"4"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" tools"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"train"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --config configs"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"classification"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"resnet18"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --stage "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"float"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" --launcher torch"})]}),"\n",(0,r.jsx)(s.span,{className:"line line-number"}),"\n",(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"# Multi-machine Multi-card"})}),"\n",(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"# Node1:"})}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"torchrun --nnodes"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"2"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" --nproc_per_node"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"4"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" --rdzv_id"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"8888"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" --rdzv_backend"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"c10d --rdzv_endpoint"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"hostip1 tools"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"train"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --config configs"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"classification"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"resnet18"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --stage "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"float"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" --launcher torch"})]}),"\n",(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-comment)"},children:"# Node2 (rdzv_id should be exactly the same as node1):"})}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"torchrun --nnodes"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"2"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" --nproc_per_node"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"4"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" --rdzv_id"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"8888"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" --rdzv_backend"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"c10d --rdzv_endpoint"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"hostip1 tools"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"train"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --config configs"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"classification"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"/"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"resnet18"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"py --stage "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"float"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" --launcher torch"})]}),"\n"]})})}),"\n",(0,r.jsxs)(s.p,{children:["Finally, note that both Python multiprocess and Torchrun are process managers, and the method of communication between processes relies on the initialization method of the ",(0,r.jsx)(s.code,{children:"process group"})," inside Torch, so the differences in management programs do not affect the training efficiency."]}),"\n",(0,r.jsx)(s.p,{children:"The most important difference among different process management programs is the process management methods they use: for example, when a process quits abnormally, whether it can get the error messages of all nodes from the main process. Or, when a single process throws an exception, whether it can make sure that all the processes exit completely. As for other aspects, such as internal development modes, the difference are not that big."})]})}function l(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,o.ah)(),e.components);return s?(0,r.jsx)(s,Object.assign({},e,{children:(0,r.jsx)(t,e)})):t(e)}s.default=l,l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["3.0.22%2Fen%2Fguide%2Fadvanced_content%2Fhat%2Ftutorials%2Flauncher.mdx"]={toc:[{id:"the-simplest-mode",text:"The Simplest Mode",depth:2},{id:"torchrun",text:"Torchrun",depth:2}],title:"Start-up Method",frontmatter:{}}},95895:function(e,s,n){n(39710);var r=n(85893),o=n(67294),i=n(45687);n(20388);let t={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"\u5C0F\u4E8E 1 \u5206\u949F"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function l(e,s,n){let r=Object.keys(t).includes(s)?s:n;return t[r](e)}s.Z=e=>{let{defaultLocale:s="en-US"}=e,n=(0,i.Vi)().page.readingTimeData,t=(0,i.Jr)(),c=(0,i.e7)(),[a,h]=(0,o.useState)(l(n,t,s));return(0,o.useEffect)(()=>{h(l(n,t,s))},[t,n]),(0,r.jsx)("span",{"data-dark":String(c),className:"rp-reading-time",children:a})}}}]);