"use strict";(self.webpackChunkrspress_doc_template=self.webpackChunkrspress_doc_template||[]).push([["88308"],{43253:function(e,s,n){n.r(s);var r=n(85893),i=n(50065),l=n(95895);function c(e){let s=Object.assign({h1:"h1",a:"a",pre:"pre",code:"code",span:"span",p:"p",ul:"ul",li:"li",table:"table",thead:"thead",tr:"tr",th:"th",strong:"strong",tbody:"tbody",td:"td"},(0,i.ah)(),e.components);return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(s.h1,{id:"hbvpvideodecode",children:[(0,r.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#hbvpvideodecode",children:"#"}),"hbVPVideoDecode"]}),"\n",(0,r.jsx)(l.Z,{}),"\n",(0,r.jsx)(s.pre,{className:"code",children:(0,r.jsx)(s.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,r.jsxs)(s.code,{className:"language-c",meta:"",children:[(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"typedef"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"struct"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"uint8_t"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" pixelFormat;"})]}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"uint32_t"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" inBufSize;"})]}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"uint32_t"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" outBufCount;"})]}),"\n",(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  hbVPVideoType videoType;"})}),"\n",(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"} hbVPVideoDecParam;"})}),"\n"]})})}),"\n",(0,r.jsx)(s.p,{children:"Parameter for Video decoding."}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["\n",(0,r.jsx)(s.p,{children:"Member"}),"\n",(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:(0,r.jsx)(s.strong,{children:"Member Name"})}),(0,r.jsx)(s.th,{children:(0,r.jsx)(s.strong,{children:"Description"})})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"pixelFormat"})}),(0,r.jsxs)(s.td,{children:["The pixel format of the input image. The ",(0,r.jsx)(s.code,{children:"HB_VP_IMAGE_FORMAT_NV12"})," and ",(0,r.jsx)(s.code,{children:"HB_VP_IMAGE_FORMAT_YUV420"})," formats are currently supported."]})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"inBufSize"})}),(0,r.jsx)(s.td,{children:"Specifies the size of the internal input buffer of Video Process Unit, its size needs to satisfy 1024 alignment. Value range [1024, 2^31-1), recommended value 10 * 1024 * 1024."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"outBufCount"})}),(0,r.jsx)(s.td,{children:"Specifies the count of output buffers the Video Process Unit. Value range [1, 31], recommended value 5."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"videoType"})}),(0,r.jsx)(s.td,{children:"The type of encoding protocol."})]})]})]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{className:"code",children:(0,r.jsx)(s.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,r.jsxs)(s.code,{className:"language-c",meta:"",children:[(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"int32_t"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"hbVPGetDefaultVideoDecParam"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"(hbVPVideoDecParam "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"*"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"param);"})]}),"\n"]})})}),"\n",(0,r.jsxs)(s.p,{children:["Get the decoder's default decoding parameter\uFF0Cwhere the pixelFormat parameter\nis ",(0,r.jsx)(s.code,{children:"HB_VP_IMAGE_FORMAT_YUV420"})," , the inBufSize parameter is set to 10 * 1024 * 1024 (which equals 10 MB), and the outBufCount parameter is set to 5."]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Parameter","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["[in] ",(0,r.jsx)(s.code,{children:"param"})," Decode the parameter."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Return Value","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Return ",(0,r.jsx)(s.code,{children:"0"})," means the API was successfully executed, otherwise the execution failed."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Description of interface limitations","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Before calling the interface, you need to specify the videoType as ",(0,r.jsx)(s.code,{children:"HB_VP_VIDEO_TYPE_H264"})," or ",(0,r.jsx)(s.code,{children:"HB_VP_VIDEO_TYPE_H265"})," ."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{className:"code",children:(0,r.jsx)(s.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,r.jsxs)(s.code,{className:"language-c",meta:"",children:[(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"int32_t"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"hbVPCreateVideoDecContext"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"(hbVPVideoContext "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"*"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"context"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"                                  hbVPVideoDecParam "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"const"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"*"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"param);"})]}),"\n"]})})}),"\n",(0,r.jsx)(s.p,{children:"The API for calling to create decoder context and initialize context to nullptr in advance before creation."}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Parameter","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["[out] ",(0,r.jsx)(s.code,{children:"context"})," Decoder context."]}),"\n",(0,r.jsxs)(s.li,{children:["[in] ",(0,r.jsx)(s.code,{children:"param"})," Decode the parameter."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Return Value","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Return ",(0,r.jsx)(s.code,{children:"0"})," means the API was successfully executed, otherwise the execution failed."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Description of interface limitations","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"The Video Process Unit highest supports the creation of 32 encoding or decoding contexts."}),"\n",(0,r.jsx)(s.li,{children:"The first frame of the decoder must be an IDR frame containing the header information of VPS+SPS+PPS, otherwise it cannot be decoded properly."}),"\n",(0,r.jsx)(s.li,{children:"The decoder does not support decoding of B-frame streams containing backward reference frames."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{className:"code",children:(0,r.jsx)(s.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,r.jsxs)(s.code,{className:"language-c",meta:"",children:[(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"int32_t"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"hbVPReleaseVideoDecContext"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"(hbVPVideoContext context);"})]}),"\n"]})})}),"\n",(0,r.jsx)(s.p,{children:"The API for calling to release the decoder context."}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Parameter","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["[in] ",(0,r.jsx)(s.code,{children:"context"})," Decoder context."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Return Value","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Return ",(0,r.jsx)(s.code,{children:"0"})," means the API was successfully executed, otherwise the execution failed."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{className:"code",children:(0,r.jsx)(s.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,r.jsxs)(s.code,{className:"language-c",meta:"",children:[(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"int32_t"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"hbVPVideoDecode"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"hbUCPTaskHandle_t"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"*"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"taskHandle"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "})]}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"                        hbVPArray "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"const"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"*"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"srcBuf"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,r.jsx)(s.span,{className:"line line-number",children:(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"                        hbVPVideoContext context);"})}),"\n"]})})}),"\n",(0,r.jsx)(s.p,{children:"The API for calling the Video Process Unit decoding"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Parameter","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["[out] ",(0,r.jsx)(s.code,{children:"taskHandle"})," Task handles are responsible for the interaction of the operator with the UCP architecture."]}),"\n",(0,r.jsxs)(s.li,{children:["[in] ",(0,r.jsx)(s.code,{children:"srcBuf"})," Pointer the memory address where the H.264 or H.265 data is stored."]}),"\n",(0,r.jsxs)(s.li,{children:["[in] ",(0,r.jsx)(s.code,{children:"context"})," Decoder context."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Return Value","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Return ",(0,r.jsx)(s.code,{children:"0"})," means the API was successfully executed, otherwise the execution failed."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Description of interface limitations","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Create the task using asynchronous methods is only supported."}),"\n",(0,r.jsx)(s.li,{children:"During video decoding, the supported resolution ranges from a minimum of 256x128 to a maximum of 8192x4096."}),"\n",(0,r.jsx)(s.li,{children:"Due to hardware limitations of the Video Processing Unit, the Video Processing Unit supports a maximum of 31 tasks being submitted simultaneously for either encoding or decoding."}),"\n",(0,r.jsx)(s.li,{children:"To avoid wasting system resources and improve Video Processing Unit decoding performance, it is recommended to reuse input addresses."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{className:"code",children:(0,r.jsx)(s.pre,{className:"shiki css-variables has-line-number",style:{backgroundColor:"var(--shiki-color-background)"},tabIndex:"0",children:(0,r.jsxs)(s.code,{className:"language-c",meta:"",children:[(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"int32_t"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"hbVPGetVideoDecOutputBuffer"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"(hbVPImage "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"*"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"outImg"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,r.jsxs)(s.span,{className:"line line-number",children:[(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"                                    "}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"hbUCPTaskHandle_t"}),(0,r.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" taskHandle);"})]}),"\n"]})})}),"\n",(0,r.jsx)(s.p,{children:"The API calling for to get the decoded data buffer."}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Parameter","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["[out] ",(0,r.jsx)(s.code,{children:"outImg"})," Pointer the memory address that holds the decoded data."]}),"\n",(0,r.jsxs)(s.li,{children:["[in] ",(0,r.jsx)(s.code,{children:"taskHandle"})," Task handles are responsible for the interaction of the operator with the UCP architecture."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Return Value","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Return ",(0,r.jsx)(s.code,{children:"0"})," means the API was successfully executed, otherwise the execution failed."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Description of interface limitations","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["The output buffer ",(0,r.jsx)(s.code,{children:"outImg"})," is requested internally by the Video Process Unit."]}),"\n",(0,r.jsx)(s.li,{children:"The buffer contains valid data upon the task is successfully completed, and is released during the task release phase."}),"\n"]}),"\n"]}),"\n"]})]})}function o(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,i.ah)(),e.components);return s?(0,r.jsx)(s,Object.assign({},e,{children:(0,r.jsx)(c,e)})):c(e)}s.default=o,o.__RSPRESS_PAGE_META={},o.__RSPRESS_PAGE_META["3.0.22%2Fen%2Fguide%2Fucp%2Fvp%2Fvp7_reference%2Fvp7_function_interface%2Fhbvpvideodecode.mdx"]={toc:[],title:"hbVPVideoDecode",frontmatter:{}}},95895:function(e,s,n){n(39710);var r=n(85893),i=n(67294),l=n(45687);n(20388);let c={"zh-CN":e=>`\u{9884}\u{8BA1}\u{9605}\u{8BFB}\u{65F6}\u{95F4}: ${e.minutes>=1?`${Math.ceil(e.minutes)} \u{5206}\u{949F}`:"\u5C0F\u4E8E 1 \u5206\u949F"}`,"en-US":e=>`Estimated reading time: ${e.minutes>=1?`${Math.ceil(e.minutes)} minutes`:"less than 1 minute"}`};function o(e,s,n){let r=Object.keys(c).includes(s)?s:n;return c[r](e)}s.Z=e=>{let{defaultLocale:s="en-US"}=e,n=(0,l.Vi)().page.readingTimeData,c=(0,l.Jr)(),t=(0,l.e7)(),[a,d]=(0,i.useState)(o(n,c,s));return(0,i.useEffect)(()=>{d(o(n,c,s))},[c,n]),(0,r.jsx)("span",{"data-dark":String(t),className:"rp-reading-time",children:a})}}}]);